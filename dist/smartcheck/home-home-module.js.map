{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home-table/home-table.component.ts","./src/app/home-table/home-table.component.html"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row p-3 mt-5\">\n  <div class=\"col-md-9 col-sm-9 col-lg-9\">\n    <div class=\"card-deck\">\n      <mdb-card>\n        <div class=\"view overlay waves-light\" mdbWavesEffect>\n          <a>\n            <div class=\"mask rgba-white-slight\"></div>\n          </a>\n        </div>\n        <mdb-card-body>\n          <mdb-card-title>\n            <p>Application Status</p>\n          </mdb-card-title>\n\n          <mdb-card-text>\n            <div class=\"row d-flex\">\n              <div>\n                <span class=\"dot\">\n                  <span class=\"dotnum dotblue\">10</span></span>\n                  <div class=\"row ml-4\">\n                    All\n                  </div>\n              </div>\n              <div>\n                <span class=\"dot\">\n                  <span class=\"dotnum dotgreen\">6</span></span>\n                  <div class=\"row ml-2\">\n                    Available\n                  </div>\n              </div>\n              <div>\n                <span class=\"dot\">\n                  <span class=\"dotnum dotred\">4</span></span>\n                  <div class=\"row ml-2\">\n                    Critical\n                  </div>\n              </div>\n\n            </div>\n\n          </mdb-card-text>\n\n        </mdb-card-body>\n      </mdb-card>\n\n      <mdb-card>\n        <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n          <a>\n            <div class=\"mask\"></div>\n          </a>\n        </div>\n        <mdb-card-body>\n          <mdb-card-title>\n            <p>Servers</p>\n          </mdb-card-title>\n\n          <mdb-card-text>\n            <div class=\"row d-flex\">\n              <div>\n                <span class=\"dot\">\n                  <span class=\"dotnum dotblue\">4</span></span>\n                  <div class=\"row ml-4\">\n                    All\n                  </div>\n              </div>\n              <div>\n                <span class=\"dot\">\n                  <span class=\"dotnum dotgreen\">2</span></span>\n                  <div class=\"row ml-2\">\n                    Active\n                  </div>\n              </div>\n              <div>\n                <span class=\"dot\">\n                  <span class=\"dotnum dotgold\">2</span></span>\n                  <div class=\"row ml-2\">\n                    Inactive\n                  </div>\n              </div>\n\n            </div>\n          </mdb-card-text>\n\n        </mdb-card-body>\n      </mdb-card>\n\n\n      <mdb-card>\n        <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n          <a>\n            <div class=\"mask\"></div>\n          </a>\n        </div>\n        <mdb-card-body>\n          <mdb-card-title>\n            <p>Health Check Counts</p>\n          </mdb-card-title>\n\n          <mdb-card-text class=\"text-center \">\n            <h3 class=\"blueText\">60</h3>\n              <p class=\"blueText\">Counts</p>\n          </mdb-card-text>\n\n        </mdb-card-body>\n      </mdb-card>\n    </div>\n\n  </div>\n\n    <div class=\"col md-12 col-sm-12 col-lg-12 mt-4\">\n      <app-home-table></app-home-table>\n\n\n  </div>\n\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { HomeTableComponent } from '../home-table/home-table.component';\n\n\n@NgModule({\n  declarations: [HomeComponent, HomeTableComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    SharedModule\n  ]\n})\nexport class HomeModule { }\n","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MdbTablePaginationComponent, MdbTableDirective, ModalDirective, MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { DataHolderService } from '../data-holder.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport {HomeApplication, Status} from '../models/homeapplication'\nimport { Servers } from '../models/servers';\n@Component({\n  selector: 'app-home-table',\n  templateUrl: './home-table.component.html',\n  styleUrls: ['./home-table.component.scss']\n})\nexport class HomeTableComponent implements OnInit, AfterViewInit {\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination!: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable!: MdbTableDirective;\n  elements: any = [];\n  previous: any = [];\n  pageAlign = 'end';\n  headElements = ['SN', 'APPLICATION', 'SERVERS MAPPED', 'LAST SCAN DATE','STATUS','ACTION'];\n  maxVisibleItems: number = 10;\n  @ViewChild('applicationResult') applicationResult!: ModalDirective;\n  selectedApplication: HomeApplication = new HomeApplication();\n  modalRef!: MDBModalRef;\n  allApplications: HomeApplication[] = [];\n  servers: Servers[] = [];\n\n  // statusEnum = Object.keys(Status);\n\n   get statusEnum(): typeof Status {\n    return Status;\n  }\n  constructor(private cdRef:ChangeDetectorRef, private dataHolderService: DataHolderService, private modalService:MDBModalService) { }\n\n  ngOnInit(): void {\n    this.allApplications = this.dataHolderService.getApplicationServers();\n    this.servers = this.dataHolderService.getServers();\n\n    this.mdbTable.setDataSource(this.dataHolderService.getApplicationServers());\n    this.elements = this.mdbTable.getDataSource();\n    this.previous = this.mdbTable.getDataSource()\n  }\n  ngAfterViewInit(){\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(this.maxVisibleItems);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  showApplicationResult(application: HomeApplication){\n    this.selectedApplication.applicationName = application.applicationName;\n    this.selectedApplication.lastScanDate = application.lastScanDate;\n    this.selectedApplication.servers = application.servers;\n    this.selectedApplication.status = application.status;\n    this.applicationResult.show();\n  }\n  openModal() {\n    this.modalRef = this.modalService.show(ModalComponent)\n  }\n\n}\n","\n    <mdb-card>\n      <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n        <a>\n          <div class=\"mask\"></div>\n        </a>\n      </div>\n      <mdb-card-body>\n        <div class=\"row\">\n          <div class=\"col-md-3 col-sm-3 col-lg-3\">\n            <div class=\"md-form form-sm\">\n              <mdb-icon fas icon=\"search\" class=\"prefix\"></mdb-icon>\n              <input mdbInput type=\"text\" id=\"search\" class=\"form-control\">\n              <label for=\"search\">Enter a search keyword</label>\n            </div>\n          </div>\n          <div class=\"col-sm-2 col-md-2 col-lg-2\">\n            <select class=\"browser-default custom-select md-form\">\n              <option selected>All Applications</option>\n              <option *ngFor=\"let app of allApplications\">\n                {{app.applicationName}}\n              </option>\n            </select>\n          </div>\n          <div class=\"col-sm-2 col-md-2 col-lg-2 md-form\">\n            <select class=\"browser-default custom-select\">\n              <option selected>All Servers</option>\n                <option *ngFor=\"let server of servers\">\n                  {{server.serverName}}\n                </option>\n\n\n\n            </select>\n          </div>\n          <div class=\"col-sm-2 col-md-2 col-lg-2 md-form\">\n            <select class=\"browser-default custom-select\">\n              <option selected>Health Check Status</option>\n              <option value=\"1\">All Status</option>\n              <option value=\"2\">Healthy</option>\n              <option value=\"3\">Critical</option>\n            </select>\n          </div>\n\n        </div>\n\n        <div class=\"table-responsive\">\n          <table mdbTable #tableEl=\"mdbTable\" class=\"z-depth-1 table\">\n            <thead class=\" w-100\">\n\n                <div class=\"d-flex justify-content-end p-4 mr-0\">\n                  <img src=\"../../assets/svg/PDF.svg\"  />\n                  <img src=\"../../assets/svg/xls.svg\"/>\n                  <span class=\"ml-4\">Showing 3 of {{elements.length}} entries</span>\n                </div>\n\n            </thead>\n            <thead>\n            <tr class=\"grey lighten-2 w-100\">\n              <th *ngFor=\"let head of headElements; let i = index\" scope=\"col\">{{head}}\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let el of elements; let i = index\">\n              <th *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\"\n                  scope=\"row\">{{i+1}}</th>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                <mdb-icon fas icon=\"circle\" [ngClass]=\"el.status == statusEnum.Healthy ? 'green-text' : 'red-text'\"></mdb-icon> {{el.applicationName}}</td>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                <a style=\"color: blue;\" class=\"server-length\">{{el.servers.length}} Servers\n                  <div class=\"show-modal\">\n                    <mdb-card style=\"width: 12rem; position: absolute;\" class=\"mx-auto\">\n                      <mdb-card-body>\n                        <div *ngFor=\"let server of el.servers\">\n                         <span class=\"mr-1\"><mdb-icon fas icon=\"arrow-right\" class=\"grey-text\" size=\"sm\"></mdb-icon></span> {{server.serverName}}\n                          <span *ngIf=\"server.isActive\"> <mdb-icon fas icon=\"circle\" class=\"green-text ml-3\"></mdb-icon></span>\n                          <span *ngIf=\"!server.isActive\"> <mdb-icon fas icon=\"circle\" class=\"red-text ml-3\"></mdb-icon></span>\n                        </div>\n                      </mdb-card-body>\n                    </mdb-card>\n                  </div></a>\n\n\n              </td>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">{{el.lastScanDate}}</td>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n\n                <!-- <mdb-icon fas icon=\"check-circle\" class=\"mr-2\" size=\"lg\" [ngClass]=\"el.status == statusEnum.Healthy ? 'green-text' : el.status == statusEnum.Inactive?'amber-text':'red-text'\" ></mdb-icon> -->\n                <mdb-icon fas icon=\"check-circle\" class=\"mr-2\" size=\"lg\" class=\"green-text mr-2\"  *ngIf=\"el.status == statusEnum.Healthy\" ></mdb-icon>\n                <mdb-icon fas icon=\"exclamation-triangle\"  size=\"lg\" class=\"amber-text mr-2\"  *ngIf=\"el.status == statusEnum.Inactive\"></mdb-icon>\n                <mdb-icon fas icon=\"times\"  class=\"red-text mr-2\"  size=\"lg\" *ngIf=\"el.status == statusEnum.Critical\"></mdb-icon>\n                {{statusEnum[el.status]}}</td>\n                <td>          <button type=\"button\" mdbBtn color=\"info\" mdbWavesEffect (click)=\"showApplicationResult(el)\" >View Results</button>\n                </td>\n\n            </tr>\n            </tbody>\n            <tfoot class=\"grey lighten-5 w-100\">\n            <tr>\n              <td colspan=\"6\">\n                <mdb-table-pagination [tableEl]=\"tableEl\" [searchDataSource]=\"elements\"></mdb-table-pagination>\n              </td>\n            </tr>\n            </tfoot>\n          </table>\n\n        </div>\n\n\n\n      </mdb-card-body>\n    </mdb-card>\n\n\n\n<div mdbModal #applicationResult=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-md\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"applicationResult.hide()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\">Health Check Result</h4>\n      </div>\n      <div class=\"modal-body\">\n        <mdb-card style=\"width: 15rem;\" class=\"mx-auto\">\n          <mdb-card-body>\n            <p>{{selectedApplication.applicationName}}<mdb-icon fas icon=\"circle\" class=\"ml-1 green-text\"></mdb-icon></p>\n            <p>Endpoint</p>\n            <div *ngFor=\"let server of selectedApplication.servers\">\n             <span class=\"mr-1\"><mdb-icon fas icon=\"arrow-right\" class=\"grey-text\" size=\"sm\"></mdb-icon></span> {{server.serverName}}\n              <span *ngIf=\"server.isActive\"> <mdb-icon fas icon=\"circle\" class=\"green-text ml-3\"></mdb-icon></span>\n              <span *ngIf=\"!server.isActive\"> <mdb-icon fas icon=\"circle\" class=\"red-text ml-3\"></mdb-icon></span>\n            </div>\n          </mdb-card-body>\n        </mdb-card>\n        <span class=\"float-right mt-4 refresh-text\"><mdb-icon fas icon=\"redo-alt\"></mdb-icon>Refresh</span>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" mdbBtn color=\"info\" class=\"waves-light\" aria-label=\"Close\" (click)=\"applicationResult.hide()\" mdbWavesEffect>Cancel</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div mdbModal #serverList=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-md\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <mdb-card style=\"width: 7rem;\" class=\"mx-auto\">\n          <mdb-card-body>\n            <p>{{selectedApplication.applicationName}}<mdb-icon fas icon=\"circle\" class=\"ml-1 green-text\"></mdb-icon></p>\n            <p>Endpoint</p>\n            <div *ngFor=\"let server of selectedApplication.servers\">\n             <span class=\"mr-1\"><mdb-icon fas icon=\"arrow-right\" class=\"grey-text\" size=\"sm\"></mdb-icon></span> {{server.serverName}}\n              <span *ngIf=\"server.isActive\"> <mdb-icon fas icon=\"circle\" class=\"green-text ml-3\"></mdb-icon></span>\n              <span *ngIf=\"!server.isActive\"> <mdb-icon fas icon=\"circle\" class=\"red-text ml-3\"></mdb-icon></span>\n            </div>\n          </mdb-card-body>\n        </mdb-card>\n        <span class=\"float-right mt-4 refresh-text\"><mdb-icon fas icon=\"redo-alt\"></mdb-icon>Refresh</span>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" mdbBtn color=\"info\" class=\"waves-light\" aria-label=\"Close\" (click)=\"applicationResult.hide()\" mdbWavesEffect>Cancel</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n"],"sourceRoot":"webpack:///"}